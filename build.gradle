buildscript {
	ext {
		kotlinVersion = "1.3.72"
		ktlintVersion = "0.31.0"
		springDependencyManagement = "1.0.8.RELEASE"
		springBootVersion = "2.2.6.RELEASE"
		flywayVersion = '6.0.1'
		mockitoVersion = "1.4.0"
		junitJupiterVersion = "5.5.2"
		junitVintageVersion = "4.12"
	}
	repositories {
		mavenCentral()
		maven { url "https://artifactory.kroger.com/artifactory/plugins-release" }
	}
	dependencies {
		classpath("io.spring.gradle:dependency-management-plugin:${springDependencyManagement}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")
		classpath("org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion")
		classpath("org.jfrog.buildinfo:build-info-extractor-gradle:3.0.1")
		classpath("org.ajoberstar:gradle-git:1.7.2")
	}
}

plugins {
	id("maven")
	id("maven-publish")
	id("java")
	id("org.jetbrains.kotlin.jvm") version "1.3.50"
	id("org.jetbrains.kotlin.plugin.allopen") version "1.3.50"
	id("org.jetbrains.kotlin.plugin.noarg") version "1.3.50"
	id("org.jetbrains.kotlin.plugin.jpa") version "1.3.50"
	id("org.jetbrains.kotlin.plugin.spring") version "1.3.11"
	id("org.springframework.boot") version "$springBootVersion"
	id("com.jfrog.artifactory") version "4.9.10"
	id("org.flywaydb.flyway") version "$flywayVersion"
	id('jacoco')
}

group = 'com.digital.digitalapp'
java.sourceCompatibility = JavaVersion.VERSION_11
java.targetCompatibility = JavaVersion.VERSION_11

def flywayUser = project.hasProperty('flywayUser') ? project.property('flywayUser') : ""
def flywayPassword = project.hasProperty('flywayPassword') ? project.property('flywayPassword') : ""
def flywayUrl = project.hasProperty('flywayUrl') ? project.property('flywayUrl') : ""

//configurations {
//	ktlint
//}

repositories {
	mavenCentral()
	maven { url "https://artifactory.kroger.com/artifactory/libs-release" }
	maven { url "https://artifactory.kroger.com/artifactory/remote-repos" }
}

dependencies {

	implementation platform("org.jetbrains.kotlin:kotlin-bom:${kotlinVersion}")
	implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
	implementation("org.flywaydb:flyway-core:${flywayVersion}")

	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("commons-validator:commons-validator:1.5.1")
	implementation("com.microsoft.sqlserver:mssql-jdbc:7.4.1.jre8")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
//	ktlint("com.github.shyiko:ktlint:0.23.1")
	testImplementation("com.willowtreeapps.assertk:assertk-jvm:0.13")
	testImplementation("com.h2database:h2")
	testImplementation("com.willowtreeapps.assertk:assertk-jvm:0.13")
	testImplementation("com.nhaarman:mockito-kotlin:${mockitoVersion}")
}

springBoot {
	buildInfo()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
		maven {
			url "build/output/"
		}
	}
}

tasks.artifactoryPublish {
	publications("mavenJava")
}



compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '11'
	}
}

test {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport, jacocoTestCoverageVerification
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
	dependsOn test
}

flyway {
	user = flywayUser
	password = flywayPassword
	url = flywayUrl
	locations = ['filesystem:src/main/resources/db/migration']
}

